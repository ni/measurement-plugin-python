name: PR

on:
  pull_request:
    branches:
      - main

env:
  POETRY_VERSION: 1.1.10

jobs:
  checks-nims:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.8 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      # @TODO: This is a workaround for there not being a way to check the lock file
      #   See: https://github.com/python-poetry/poetry/issues/453
      # We might need to make sure the Test dependencies(as of now - Style Guides)
      - name: Check for lock changes (measurement service)
        run: |
          PYTHONPATH="${PYTHONPATH}:${HOME}/.poetry/lib:${HOME}/.poetry/lib/poetry/_vendor/py${{ env.PYTHON_VERSION }}" \
          python -c "from poetry.factory import Factory; \
            locker = Factory().create_poetry('.').locker; \
            lock_is_fresh = locker.is_locked() and locker.is_fresh(); \
            print(\"\" if lock_is_fresh else \"Lock is stale, run 'poetry lock' to update the lock file.\"); \
            exit(0) if lock_is_fresh else exit(1)"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install the Package
        run: poetry install -vvv
      - name: Lint the Code
        run: poetry run ni-python-styleguide lint
      - name: MyPy Static Analysis 
        run:  poetry run mypy -p ni_measurement_service --show-error-codes -v
      - name: MyPy Static Analysis on examples 
        run:  poetry run mypy -p examples --show-error-codes -v
      - name: MyPy Static Analysis ni_measurement_generator
        run:  poetry run mypy -p ni_measurement_generator --show-error-codes -v
        
  checks-nimg:
    runs-on: ubuntu-latest
    defaults: # in theory this sets the working-dir for all steps in this job
      run:
        working-directory: ./ni_measurement_generator
    env:
      PYTHON_VERSION: 3.8 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      # @TODO: This is a workaround for there not being a way to check the lock file
      #   See: https://github.com/python-poetry/poetry/issues/453
      # We might need to make sure the Test dependencies(as of now - Style Guides)
      - name: Check for lock changes (generator)
        run: |
          PYTHONPATH="${PYTHONPATH}:${HOME}/.poetry/lib:${HOME}/.poetry/lib/poetry/_vendor/py${{ env.PYTHON_VERSION }}" \
          python -c "from poetry.factory import Factory; \
            locker = Factory().create_poetry('.').locker; \
            lock_is_fresh = locker.is_locked() and locker.is_fresh(); \
            print(\"\" if lock_is_fresh else \"Lock is stale, run 'poetry lock' to update the lock file.\"); \
            exit(0) if lock_is_fresh else exit(1)"
        working-directory: ./ni_measurement_generator
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install the Package
        run: poetry install -vvv
      - name: Lint the Code
        run: poetry run ni-python-styleguide lint

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install the Package (measurement service).
        run: poetry install -vvv
      - name: Run tests and Code coverage summary (measurement service).
        run: poetry run pytest ./tests -v --cov=ni_measurement_service
      - name: Install the Package (generator).
        run: poetry install -vvv
        working-directory: ./ni_measurement_generator
      - name: Run tests and Code coverage summary (generator).
        run: poetry run pytest -v
        working-directory: ./ni_measurement_generator