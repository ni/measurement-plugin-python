name: Publish NIMG

on:
  release:
    types: [released]

concurrency: publish_to_pypi

env:
  # Versions are also listed in PR.yml
  POETRY_VERSION: 1.2.2
  PYTHON_VERSION: 3.9

jobs:
  build:
    name: Publish NIMG Package to PyPI
    runs-on : ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: Gr1N/setup-poetry@v7
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Check for lock changes
        run: poetry lock --check

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Setup NIMG
        run: poetry install
        working-directory: ./ni_measurement_generator

      - name: Lint the Code
        run: poetry run ni-python-styleguide lint
        working-directory: ./ni_measurement_generator

      # If the tag is 0.1.0, this will set the version of NIMS package to 0.1.0
      - name: Store version from Tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        working-directory: ./ni_measurement_generator

      - name: Promote NIMG package version to tag name.
        run: |
          poetry version ${{ steps.vars.outputs.tag }}
        working-directory: ./ni_measurement_generator
      
      - name: Commit file changes.
        if: ${{ startsWith(github.event.release.target_commitish, 'main') }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Promote NIMG package version to match the release tag" -a
        working-directory: ./ni_measurement_generator

      - name: Push changes to the Main branch
        if: ${{ startsWith(github.event.release.target_commitish, 'main') }}
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.ADMIN_PAT }}
          branch: ${{ github.event.release.target_commitish }}  
          unprotect_reviews: true
          
      # To Test the Publish use : poetry publish --build --username __token__ --password ${{ secrets.TEST_PYPI_TOKEN }} -r test-pypi
      - name: Build Python package and publish to PyPI
        if: ${{ startsWith(github.event.release.target_commitish, 'main') }}
        run: |
          poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}
        working-directory: ./ni_measurement_generator
