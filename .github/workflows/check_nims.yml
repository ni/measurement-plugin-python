name: Check NIMS

on:
  workflow_call:
  workflow_dispatch:

env:
  POETRY_VERSION: 1.2.2
  PYTHON_VERSION: 3.9

jobs:
  check_nims:
    name: Check NIMS
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Check for lock changes (ni-measurementlink-service)
        run: poetry lock --check

      # ni-measurementlink-service, all extras
      - name: Restore cached virtualenv (ni-measurementlink-service, all extras)
        uses: actions/cache/restore@v3
        id: restore-nims-all-extras
        with:
          path: .venv
          key: ni-measurementlink-service-all-extras-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('poetry.lock') }}
      - name: Install ni-measurementlink-service (all extras)
        run: poetry install -v --all-extras
      - name: Save cached virtualenv (ni-measurementlink-service, all extras)
        uses: actions/cache/save@v3
        if: steps.restore-nims-all-extras.outputs.cache-hit != 'true'
        with:
          path: .venv
          key: ${{ steps.restore-nims-all-extras.outputs.cache-primary-key }}
      - name: Lint ni-measurementlink-service
        run: poetry run ni-python-styleguide lint
      - name: Mypy static analysis (ni-measurementlink-service, Linux)
        run:  poetry run mypy -p ni_measurementlink_service
      - name: Mypy static analysis (ni-measurementlink-service, Windows)
        run:  poetry run mypy -p ni_measurementlink_service --platform win32
      - name: Mypy static analysis (tests, Linux)
        run:  poetry run mypy tests
      - name: Mypy static analysis (tests, Windows)
        run:  poetry run mypy tests --platform win32

      # ni-measurementlink-service, all extras, docs
      - name: Restore cached virtualenv (ni-measurementlink-service, all extras, docs)
        uses: actions/cache/restore@v3
        id: restore-nims-all-extras-docs
        with:
          path: .venv
          key: ni-measurementlink-service-all-extras-docs-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('poetry.lock') }}
      - name: Install ni-measurementlink-service (all extras, docs)
        run: poetry install -v --all-extras --with docs
      - name: Save cached virtualenv (ni-measurementlink-service, all extras, docs)
        uses: actions/cache/save@v3
        if: steps.restore-nims-all-extras-docs.outputs.cache-hit != 'true'
        with:
          path: .venv
          key: ${{ steps.restore-nims-all-extras-docs.outputs.cache-primary-key }}
      - name: Build docs and check for errors/warnings
        run: |
          rm -rf docs
          mkdir -p docs   
          poetry run sphinx-build _docs_source docs -b html -W --keep-going
      - name: Revert docs
        run:  git clean -dfx docs/ && git restore docs/
