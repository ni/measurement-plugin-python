name: Check NIMS

on:
  workflow_call:
  workflow_dispatch:

env:
  POETRY_VERSION: 1.8.2
  PYTHON_VERSION: 3.9

jobs:
  check_nims:
    name: Check NIMS
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Check for lock changes (ni-measurement-plugin-sdk)
        run: poetry lock --check

      # ni-measurement-plugin-sdk, all extras
      - name: Restore cached virtualenv (ni-measurement-plugin-sdk, all extras)
        uses: actions/cache/restore@v4
        id: restore-nims-all-extras
        with:
          path: .venv
          key: ni-measurement-plugin-sdk-all-extras-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install ni-measurement-plugin-sdk (all extras)
        run: poetry install -v --all-extras
      - name: Save cached virtualenv (ni-measurement-plugin-sdk, all extras)
        uses: actions/cache/save@v4
        if: steps.restore-nims-all-extras.outputs.cache-hit != 'true'
        with:
          path: .venv
          key: ${{ steps.restore-nims-all-extras.outputs.cache-primary-key }}
      - name: Lint ni-measurement-plugin-sdk
        run: poetry run ni-python-styleguide lint
      - name: Mypy static analysis (ni-measurement-plugin-sdk, Linux)
        run:  poetry run mypy -p ni_measurement_plugin_sdk
      - name: Mypy static analysis (ni-measurement-plugin-sdk, Windows)
        run:  poetry run mypy -p ni_measurement_plugin_sdk --platform win32
      - name: Mypy static analysis (tests, Linux)
        run:  poetry run mypy tests
      - name: Mypy static analysis (tests, Windows)
        run:  poetry run mypy tests --platform win32

      # ni-measurement-plugin-sdk, all extras, docs
      - name: Restore cached virtualenv (ni-measurement-plugin-sdk, all extras, docs)
        uses: actions/cache/restore@v4
        id: restore-nims-all-extras-docs
        with:
          path: .venv
          key: ni-measurement-plugin-sdk-all-extras-docs-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install ni-measurement-plugin-sdk (all extras, docs)
        run: poetry install -v --all-extras --with docs
      - name: Save cached virtualenv (ni-measurement-plugin-sdk, all extras, docs)
        uses: actions/cache/save@v4
        if: steps.restore-nims-all-extras-docs.outputs.cache-hit != 'true'
        with:
          path: .venv
          key: ${{ steps.restore-nims-all-extras-docs.outputs.cache-primary-key }}
      - name: Build docs and check for errors/warnings
        run: |
          rm -rf docs
          mkdir -p docs   
          poetry run sphinx-build _docs_source docs -b html -W --keep-going
      - name: Revert docs
        run:  git clean -dfx docs/ && git restore docs/
      - name: Generate gRPC stubs
        run: |
          find ni_measurement_plugin_sdk/_internal/stubs/ -name \*_pb2.py\* -o -name \*_pb2_grpc.py\* -delete
          find tests/utilities/stubs/ -name \*_pb2.py\* -o -name \*_pb2_grpc.py\* -delete
          poetry run python scripts/generate_grpc_stubs.py
      - name: Check for out-of-date gRPC stubs
        run:  git diff --exit-code
      - name: Revert gRPC stubs
        run: |
          git clean -dfx ni_measurement_plugin_sdk/_internal/stubs/ tests/utilities/stubs/
          git restore ni_measurement_plugin_sdk/_internal/stubs/ tests/utilities/stubs/
