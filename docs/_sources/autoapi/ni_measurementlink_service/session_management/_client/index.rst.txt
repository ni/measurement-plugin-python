:orphan:

:py:mod:`ni_measurementlink_service.session_management._client`
===============================================================

.. py:module:: ni_measurementlink_service.session_management._client

.. autoapi-nested-parse::

   Session management client class.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ni_measurementlink_service.session_management._client.SessionManagementClient




.. py:class:: SessionManagementClient(*, discovery_client = None, grpc_channel = None, grpc_channel_pool = None)


   Bases: :py:obj:`object`

   Client for accessing the MeasurementLink session management service.

   .. py:method:: reserve_session(context, pin_or_relay_names = None, instrument_type_id = None, timeout = 0.0)

      Reserve a single session.

      Reserve the session matching the given pins, sites, and instrument type ID and return the
      information needed to create or access the session.

      :param context: Includes the pin map ID for the pin map in the Pin Map Service,
                      as well as the list of sites for the measurement.
      :param pin_or_relay_names: One or multiple pins, pin groups, relays, or relay groups to use
                                 for the measurement.

                                 If unspecified, reserve sessions for all pins and relays in the registered pin map
                                 resource.
      :param instrument_type_id: Instrument type ID for the measurement.

                                 If unspecified, this method reserve sessions for all instrument types connected
                                 in the registered pin map resource.

                                 For NI instruments, use instrument type id constants, such as
                                 :py:const:`INSTRUMENT_TYPE_NI_DCPOWER` or :py:const:`INSTRUMENT_TYPE_NI_DMM`.

                                 For custom instruments, use the instrument type id defined in the pin map file.
      :param timeout: Timeout in seconds.

                      Allowed values: 0 (non-blocking, fails immediately if resources cannot be
                      reserved), -1 (infinite timeout), or any other positive numeric value (wait for
                      that number of seconds)

      :returns: A reservation object with which you can query information about the session and
                unreserve it.


   .. py:method:: reserve_sessions(context, pin_or_relay_names = None, instrument_type_id = None, timeout = 0.0)

      Reserve multiple sessions.

      Reserve sessions matching the given pins, sites, and instrument type ID and return the
      information needed to create or access the sessions.

      :param context: Includes the pin map ID for the pin map in the Pin Map Service,
                      as well as the list of sites for the measurement.
      :param pin_or_relay_names: One or multiple pins, pin groups, relays, or relay groups to use
                                 for the measurement.

                                 If unspecified, reserve sessions for all pins and relays in the registered pin map
                                 resource.
      :param instrument_type_id: Instrument type ID for the measurement.

                                 If unspecified, this method reserves sessions for all instrument types connected
                                 in the registered pin map resource.

                                 For NI instruments, use instrument type id constants, such as
                                 :py:const:`INSTRUMENT_TYPE_NI_DCPOWER` or :py:const:`INSTRUMENT_TYPE_NI_DMM`.

                                 For custom instruments, use the instrument type id defined in the pin map file.
      :param timeout: Timeout in seconds.

                      Allowed values: 0 (non-blocking, fails immediately if resources cannot be
                      reserved), -1 (infinite timeout), or any other positive numeric value (wait for
                      that number of seconds)

      :returns: A reservation object with which you can query information about the sessions and
                unreserve them.


   .. py:method:: register_sessions(session_info)

      Register sessions with the session management service.

      Indicates that the sessions are open and will need to be closed later.

      :param session_info: Sessions to register.


   .. py:method:: unregister_sessions(session_info)

      Unregisters sessions from the session management service.

      Indicates that the sessions have been closed and will need to be reopened before they can be
      used again.

      :param session_info: Sessions to unregister.


   .. py:method:: reserve_all_registered_sessions(instrument_type_id = None, timeout = 0.0)

      Reserve all sessions currently registered with the session management service.

      :param instrument_type_id: Instrument type ID for the measurement.

                                 If unspecified, reserve sessions for all instrument types connected in the
                                 registered pin map resource.

                                 For NI instruments, use instrument type id constants, such as
                                 :py:const:`INSTRUMENT_TYPE_NI_DCPOWER` or :py:const:`INSTRUMENT_TYPE_NI_DMM`.

                                 For custom instruments, use the instrument type id defined in the pin map file.
      :param timeout: Timeout in seconds.

                      Allowed values: 0 (non-blocking, fails immediately if resources cannot be
                      reserved), -1 (infinite timeout), or any other positive numeric value (wait for
                      that number of seconds)

      :returns: A reservation object with which you can query information about the sessions and
                unreserve them.



