:py:mod:`ni_measurementlink_service.measurement.info`
=====================================================

.. py:module:: ni_measurementlink_service.measurement.info

.. autoapi-nested-parse::

   Measurement service metadata classes and enums.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ni_measurementlink_service.measurement.info.MeasurementInfo
   ni_measurementlink_service.measurement.info.ServiceInfo
   ni_measurementlink_service.measurement.info.TypeSpecialization
   ni_measurementlink_service.measurement.info.DataType




.. py:class:: MeasurementInfo

   Bases: :py:obj:`NamedTuple`

   A named tuple providing information about a measurement.

   .. py:attribute:: display_name
      :annotation: :str

      The user visible name of the measurement.

   .. py:attribute:: version
      :annotation: :str

      The current version of the measurement.

   .. py:attribute:: ui_file_paths
      :annotation: :List[pathlib.Path]

      Absolute paths to user interface files for the measurement (e.g. ``.measui`` or ``.vi``
      files).


.. py:class:: ServiceInfo

   Bases: :py:obj:`NamedTuple`

   A named tuple providing information about a registered service.

   This class is used with the MeasurementLink discovery service when registering and enumerating
   services.

   .. py:attribute:: service_class
      :annotation: :str

      "The "class" of a service. The value of this field should be unique for a given interface
      in ``provided_interfaces``. In effect, the ``.proto`` service declaration defines the
      interface, and this field defines a class or concrete type of the interface.

   .. py:attribute:: description_url
      :annotation: :str

      The URL of a web page that provides a description of the service.

   .. py:attribute:: provided_interfaces
      :annotation: :List[str] = ['ni.measurementlink.measurement.v1.MeasurementService']

      The service interfaces provided by the service. These are gRPC full names for the service.

   .. py:attribute:: annotations
      :annotation: :Dict[str, str]

      Represents a set of annotations on the service.

      Well-known annotations:

      - Description
         - Key: "ni/service.description"
            - Expected format: string
            - Example: "Measure inrush current with a shorted load and validate results against
              configured limits."
      - Collection
         - Key: "ni/service.collection"
            - Expected format: "." delimited namespace/hierarchy case-insensitive string
            - Example: "CurrentTests.Inrush"
      - Tags
          - Key: "ni/service.tags"
             - Expected format: serialized JSON string of an array of strings
             - Example: "["powerup", "current"]"


.. py:class:: TypeSpecialization

   Bases: :py:obj:`enum.Enum`

   Enum that represents the type specializations for measurement parameters.

   .. py:attribute:: NoType
      :annotation: = 

      

   .. py:attribute:: Pin
      :annotation: = pin

      

   .. py:attribute:: Path
      :annotation: = path

      

   .. py:attribute:: Enum
      :annotation: = enum

      


.. py:class:: DataType

   Bases: :py:obj:`enum.Enum`

   Enum that represents the supported data types.

   .. py:attribute:: Int32
      :annotation: = 0

      

   .. py:attribute:: Int64
      :annotation: = 1

      

   .. py:attribute:: UInt32
      :annotation: = 2

      

   .. py:attribute:: UInt64
      :annotation: = 3

      

   .. py:attribute:: Float
      :annotation: = 4

      

   .. py:attribute:: Double
      :annotation: = 5

      

   .. py:attribute:: Boolean
      :annotation: = 6

      

   .. py:attribute:: String
      :annotation: = 7

      

   .. py:attribute:: Pin
      :annotation: = 8

      

   .. py:attribute:: Path
      :annotation: = 9

      

   .. py:attribute:: Enum
      :annotation: = 10

      

   .. py:attribute:: DoubleXYData
      :annotation: = 11

      

   .. py:attribute:: Int32Array1D
      :annotation: = 100

      

   .. py:attribute:: Int64Array1D
      :annotation: = 101

      

   .. py:attribute:: UInt32Array1D
      :annotation: = 102

      

   .. py:attribute:: UInt64Array1D
      :annotation: = 103

      

   .. py:attribute:: FloatArray1D
      :annotation: = 104

      

   .. py:attribute:: DoubleArray1D
      :annotation: = 105

      

   .. py:attribute:: BooleanArray1D
      :annotation: = 106

      

   .. py:attribute:: StringArray1D
      :annotation: = 107

      

   .. py:attribute:: PinArray1D
      :annotation: = 108

      

   .. py:attribute:: PathArray1D
      :annotation: = 109

      

   .. py:attribute:: EnumArray1D
      :annotation: = 110

      


