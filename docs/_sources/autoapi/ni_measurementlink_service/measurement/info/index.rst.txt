:py:mod:`ni_measurementlink_service.measurement.info`
=====================================================

.. py:module:: ni_measurementlink_service.measurement.info

.. autoapi-nested-parse::

   Contains classes and enums to represent measurement metadata.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ni_measurementlink_service.measurement.info.MeasurementInfo
   ni_measurementlink_service.measurement.info.ServiceInfo
   ni_measurementlink_service.measurement.info.TypeSpecialization
   ni_measurementlink_service.measurement.info.DataType




.. py:class:: MeasurementInfo

   Bases: :py:obj:`NamedTuple`

   Class that represents the measurement information.

   Attributes
   ----------
       display_name (str): The measurement display name for client to display to user.

       version (str): The measurement version that helps to
       maintain versions of a measurement in future.

       ui_file_paths (list): Absolute paths of the UI file(s) linked to the measurement.


   .. py:attribute:: display_name
      :annotation: :str

      

   .. py:attribute:: version
      :annotation: :str

      

   .. py:attribute:: ui_file_paths
      :annotation: :List[pathlib.Path]

      


.. py:class:: ServiceInfo

   Bases: :py:obj:`NamedTuple`

   Class that represents the service information.

   Attributes
   ----------
       service_class (str): Service class that the measurement belongs to.
       Measurements under same service class expected to perform same logic.
       For e.g., different version of measurement can come under same service class.


       description_url (str): Description URL of the measurement.

       provided_interfaces (List[str]): List of interfaces the service provides.
       For e.g., ni.measurementlink.measurement.v2.MeasurementService.
       Defaults to ["ni.measurementlink.measurement.v1.MeasurementService"].

       annotations (Dict[str,str]): Dict that contains extra information of the measurement.
       As default we added a (str) description, (str) collection and a (List[str]) list of tags.
       Feel free to add your own Annotations as needed.


   .. py:attribute:: service_class
      :annotation: :str

      

   .. py:attribute:: description_url
      :annotation: :str

      

   .. py:attribute:: provided_interfaces
      :annotation: :List[str] = ['ni.measurementlink.measurement.v1.MeasurementService']

      

   .. py:attribute:: annotations
      :annotation: :Dict[str, str]

      


.. py:class:: TypeSpecialization

   Bases: :py:obj:`enum.Enum`

   Enum that represents the type specializations for measurement parameters.

   .. py:attribute:: NoType
      :annotation: = 

      

   .. py:attribute:: Pin
      :annotation: = pin

      

   .. py:attribute:: Path
      :annotation: = path

      

   .. py:attribute:: Enum
      :annotation: = enum

      


.. py:class:: DataType

   Bases: :py:obj:`enum.Enum`

   Enum that represents the supported data types.

   .. py:attribute:: Int32
      :annotation: = 0

      

   .. py:attribute:: Int64
      :annotation: = 1

      

   .. py:attribute:: UInt32
      :annotation: = 2

      

   .. py:attribute:: UInt64
      :annotation: = 3

      

   .. py:attribute:: Float
      :annotation: = 4

      

   .. py:attribute:: Double
      :annotation: = 5

      

   .. py:attribute:: Boolean
      :annotation: = 6

      

   .. py:attribute:: String
      :annotation: = 7

      

   .. py:attribute:: Pin
      :annotation: = 8

      

   .. py:attribute:: Path
      :annotation: = 9

      

   .. py:attribute:: Enum
      :annotation: = 10

      

   .. py:attribute:: DoubleXYData
      :annotation: = 11

      

   .. py:attribute:: Int32Array1D
      :annotation: = 100

      

   .. py:attribute:: Int64Array1D
      :annotation: = 101

      

   .. py:attribute:: UInt32Array1D
      :annotation: = 102

      

   .. py:attribute:: UInt64Array1D
      :annotation: = 103

      

   .. py:attribute:: FloatArray1D
      :annotation: = 104

      

   .. py:attribute:: DoubleArray1D
      :annotation: = 105

      

   .. py:attribute:: BooleanArray1D
      :annotation: = 106

      

   .. py:attribute:: StringArray1D
      :annotation: = 107

      

   .. py:attribute:: PinArray1D
      :annotation: = 108

      

   .. py:attribute:: PathArray1D
      :annotation: = 109

      

   .. py:attribute:: EnumArray1D
      :annotation: = 110

      


