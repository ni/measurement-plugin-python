:py:mod:`ni_measurementlink_service._internal.grpc_servicer`
============================================================

.. py:module:: ni_measurementlink_service._internal.grpc_servicer

.. autoapi-nested-parse::

   gRPC servicers for each version of the measurement service interface.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ni_measurementlink_service._internal.grpc_servicer.MeasurementServiceContext
   ni_measurementlink_service._internal.grpc_servicer.MeasurementServiceServicerV1
   ni_measurementlink_service._internal.grpc_servicer.MeasurementServiceServicerV2




Attributes
~~~~~~~~~~

.. autoapisummary::

   ni_measurementlink_service._internal.grpc_servicer.measurement_service_context


.. py:class:: MeasurementServiceContext(grpc_context, pin_map_context, owner)


   Accessor for the measurement service's context-local state.

   .. py:property:: grpc_context
      :type: grpc.ServicerContext

      Get the context for the RPC.

   .. py:property:: owner
      :type: object

      The owner of the server (e.g. measurement service).

   .. py:property:: pin_map_context
      :type: ni_measurementlink_service.session_management.PinMapContext

      Get the pin map context for the RPC.

   .. py:property:: time_remaining
      :type: float

      Get the time remaining for the RPC.

   .. py:method:: mark_complete()

      Mark the current RPC as complete.


   .. py:method:: add_cancel_callback(cancel_callback)

      Add a callback that is invoked when the RPC is canceled.


   .. py:method:: cancel()

      Cancel the RPC.


   .. py:method:: abort(code, details)

      Aborts the RPC.



.. py:exception:: CustomRpcError(code, details)


   Bases: :py:obj:`grpc.RpcError`

   A custom exception class for handling gRPC RPC errors.

   gRPC's built-in RpcError is not directly configurable in Python, so this class
   enables the creation of custom RPC errors with specific error codes.

   .. py:method:: code()

      Get the gRPC status code.


   .. py:method:: details()

      Get the gRPC status details.



.. py:data:: measurement_service_context
   :type: contextvars.ContextVar[MeasurementServiceContext]

   

.. py:class:: MeasurementServiceServicerV1(measurement_info, configuration_parameter_list, output_parameter_list, measure_function, owner)


   Bases: :py:obj:`ni_measurementlink_service._internal.stubs.ni.measurementlink.measurement.v1.measurement_service_pb2_grpc.MeasurementServiceServicer`

   Measurement v1 servicer.

   .. py:method:: GetMetadata(request, context)

      RPC API to get measurement metadata.


   .. py:method:: Measure(request, context)

      RPC API that executes the registered measurement method.



.. py:class:: MeasurementServiceServicerV2(measurement_info, configuration_parameter_list, output_parameter_list, measure_function, owner)


   Bases: :py:obj:`ni_measurementlink_service._internal.stubs.ni.measurementlink.measurement.v2.measurement_service_pb2_grpc.MeasurementServiceServicer`

   Measurement v2 servicer.

   .. py:method:: GetMetadata(request, context)

      RPC API to get measurement metadata.


   .. py:method:: Measure(request, context)

      RPC API that executes the registered measurement method.



