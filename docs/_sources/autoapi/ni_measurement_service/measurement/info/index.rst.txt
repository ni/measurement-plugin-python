:py:mod:`ni_measurement_service.measurement.info`
=================================================

.. py:module:: ni_measurement_service.measurement.info

.. autoapi-nested-parse::

   Contains classes and enums to represent measurement metadata.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ni_measurement_service.measurement.info.UIFileType
   ni_measurement_service.measurement.info.MeasurementInfo
   ni_measurement_service.measurement.info.ServiceInfo
   ni_measurement_service.measurement.info.DataType




.. py:class:: UIFileType

   Bases: :py:obj:`enum.Enum`

   Enum that represents the supported UI Types.

   .. py:attribute:: ScreenFile
      :annotation: = ni_scr://

      

   .. py:attribute:: LabVIEW
      :annotation: = ni_vi://

      


.. py:class:: MeasurementInfo

   Bases: :py:obj:`NamedTuple`

   Class that represents the measurement information.

   Attributes
   ----------
       display_name (str): The display name of the measurement.

       version (str): The version of the measurement.

       measurement_type (str): Type of the measurement.

       product_type (str): Type of product related to the measurement.

       ui_file_path (str): Path of the UI file linked to the measurement.

       ui_file_type (UIFileType): Type of the linked UI file.


   .. py:attribute:: display_name
      :annotation: :str

      

   .. py:attribute:: version
      :annotation: :str

      

   .. py:attribute:: measurement_type
      :annotation: :str

      

   .. py:attribute:: product_type
      :annotation: :str

      

   .. py:attribute:: ui_file_path
      :annotation: :str

      

   .. py:attribute:: ui_file_type
      :annotation: :UIFileType

      


.. py:class:: ServiceInfo

   Bases: :py:obj:`NamedTuple`

   Class the represents the service information.

   Attributes
   ----------
       service_class (str): Service class that the measurement belongs to.
       Measurements under same service class expected to perform same logic.
       For e.g., different version of measurement can come under same service class.

       service_id (str): Unique service of the measurement. Should be an Unique GUID.

       description_url (str): Description URL of the measurement.


   .. py:attribute:: service_class
      :annotation: :str

      

   .. py:attribute:: service_id
      :annotation: :str

      

   .. py:attribute:: description_url
      :annotation: :str

      


.. py:class:: DataType

   Bases: :py:obj:`enum.Enum`

   Enum that represents the supported data types.

   .. py:attribute:: Int32
      

      

   .. py:attribute:: Int64
      

      

   .. py:attribute:: UInt32
      

      

   .. py:attribute:: UInt64
      

      

   .. py:attribute:: Float
      

      

   .. py:attribute:: Double
      

      

   .. py:attribute:: Boolean
      

      

   .. py:attribute:: String
      

      

   .. py:attribute:: DoubleArray1D
      

      


