"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
---------------------------------------------------------------------
---------------------------------------------------------------------
"""
import ServiceLocation_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ServiceDescriptor(google.protobuf.message.Message):
    """Description of a registered service.  This information can be used to display
    to the user information about the service when services are being developed for
    a plug-in architecture
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_URL_FIELD_NUMBER: builtins.int
    SERVICE_CLASS_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    service_id: builtins.str
    name: builtins.str
    """The user visible name of a service"""
    description_url: builtins.str
    """Url which provides descriptive information about the service"""
    service_class: builtins.str
    """The "class" of a service.  All services of the same class provide identical
    functionality.  When a service interface is defined for a plug-in system
    many services which provide different functionality may provide a service by that
    interface. The class can be used to uniquely identify the functionality the service
    provides.
    """
    @property
    def attributes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Optional attributes of a service"""
    def __init__(
        self,
        *,
        service_id: builtins.str = ...,
        name: builtins.str = ...,
        description_url: builtins.str = ...,
        service_class: builtins.str = ...,
        attributes: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "attributes",
            b"attributes",
            "description_url",
            b"description_url",
            "name",
            b"name",
            "service_class",
            b"service_class",
            "service_id",
            b"service_id",
        ],
    ) -> None: ...

global___ServiceDescriptor = ServiceDescriptor

class RegisterServiceRequest(google.protobuf.message.Message):
    """Request used when registering a service"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_DESCRIPTION_FIELD_NUMBER: builtins.int
    PROVIDED_SERVICES_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    @property
    def service_description(self) -> global___ServiceDescriptor:
        """The service description"""
    @property
    def provided_services(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The list of services the service instance provides.  These are the gRPC Full Name of the
        service.  Registration can use the gRPC metadata to provide this name
        """
    @property
    def location(self) -> ServiceLocation_pb2.ServiceLocation:
        """The canonical location information for the service."""
    def __init__(
        self,
        *,
        service_description: global___ServiceDescriptor | None = ...,
        provided_services: collections.abc.Iterable[builtins.str] | None = ...,
        location: ServiceLocation_pb2.ServiceLocation | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "location", b"location", "service_description", b"service_description"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "location",
            b"location",
            "provided_services",
            b"provided_services",
            "service_description",
            b"service_description",
        ],
    ) -> None: ...

global___RegisterServiceRequest = RegisterServiceRequest

class RegisterServiceResponse(google.protobuf.message.Message):
    """Response to registering a service"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTRATION_ID_FIELD_NUMBER: builtins.int
    registration_id: builtins.str
    """ID that can be used to unregister the service"""
    def __init__(
        self,
        *,
        registration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["registration_id", b"registration_id"]
    ) -> None: ...

global___RegisterServiceResponse = RegisterServiceResponse

class UnregisterServiceRequest(google.protobuf.message.Message):
    """Service unregistration request"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTRATION_ID_FIELD_NUMBER: builtins.int
    registration_id: builtins.str
    """The ID of the registered service to unregister"""
    def __init__(
        self,
        *,
        registration_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["registration_id", b"registration_id"]
    ) -> None: ...

global___UnregisterServiceRequest = UnregisterServiceRequest

class UnregisterServiceResponse(google.protobuf.message.Message):
    """Response for registering a service"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UnregisterServiceResponse = UnregisterServiceResponse

class EnumerateServicesRequest(google.protobuf.message.Message):
    """Requested used when enumerating a service"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_SERVICE_FIELD_NUMBER: builtins.int
    required_service: builtins.str
    """The gRPC full name of the service interface that is needed
    Caller can use the gRPC metadata to provide this name
    """
    def __init__(
        self,
        *,
        required_service: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["required_service", b"required_service"]
    ) -> None: ...

global___EnumerateServicesRequest = EnumerateServicesRequest

class EnumerateServicesResponse(google.protobuf.message.Message):
    """Response used when enumerating services"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABLE_SERVICES_FIELD_NUMBER: builtins.int
    @property
    def available_services(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___ServiceDescriptor
    ]:
        """The list of available services which implement the specified service
        interface
        """
    def __init__(
        self,
        *,
        available_services: collections.abc.Iterable[global___ServiceDescriptor] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["available_services", b"available_services"]
    ) -> None: ...

global___EnumerateServicesResponse = EnumerateServicesResponse

class ResolveServiceRequest(google.protobuf.message.Message):
    """Request used when resolving for a specific service instance"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_DATA_LOCATION_FIELD_NUMBER: builtins.int
    REQUIRED_SERVICE_CLASS_FIELD_NUMBER: builtins.int
    request_data_location: builtins.str
    """The location of the caller / consumer of the data provided by the
    service.
    """
    required_service_class: builtins.str
    """The service "class" that is required"""
    def __init__(
        self,
        *,
        request_data_location: builtins.str = ...,
        required_service_class: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "request_data_location",
            b"request_data_location",
            "required_service_class",
            b"required_service_class",
        ],
    ) -> None: ...

global___ResolveServiceRequest = ResolveServiceRequest

class ResolveMonikerEndpointRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_LOCATION_FIELD_NUMBER: builtins.int
    MONIKER_LOCATION_FIELD_NUMBER: builtins.int
    request_location: builtins.str
    """The location, IP Address, which will be doing the communication
    with the data endpoint
    """
    @property
    def moniker_location(self) -> ServiceLocation_pb2.ServiceLocation:
        """The location of the source / sink of the data"""
    def __init__(
        self,
        *,
        request_location: builtins.str = ...,
        moniker_location: ServiceLocation_pb2.ServiceLocation | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["moniker_location", b"moniker_location"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "moniker_location", b"moniker_location", "request_location", b"request_location"
        ],
    ) -> None: ...

global___ResolveMonikerEndpointRequest = ResolveMonikerEndpointRequest
