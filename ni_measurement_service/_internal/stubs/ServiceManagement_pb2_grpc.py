# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ServiceManagement_pb2 as ServiceManagement__pb2


class ServiceManagementServiceStub(object):
    """Service that contains methods related to service management"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StopService = channel.unary_unary(
            "/ni.measurements.servicemanagement.v1.ServiceManagementService/StopService",
            request_serializer=ServiceManagement__pb2.StopServiceRequest.SerializeToString,
            response_deserializer=ServiceManagement__pb2.StopServiceResponse.FromString,
        )


class ServiceManagementServiceServicer(object):
    """Service that contains methods related to service management"""

    def StopService(self, request, context):
        """API to stop the measurement service"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ServiceManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "StopService": grpc.unary_unary_rpc_method_handler(
            servicer.StopService,
            request_deserializer=ServiceManagement__pb2.StopServiceRequest.FromString,
            response_serializer=ServiceManagement__pb2.StopServiceResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "ni.measurements.servicemanagement.v1.ServiceManagementService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ServiceManagementService(object):
    """Service that contains methods related to service management"""

    @staticmethod
    def StopService(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ni.measurements.servicemanagement.v1.ServiceManagementService/StopService",
            ServiceManagement__pb2.StopServiceRequest.SerializeToString,
            ServiceManagement__pb2.StopServiceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
