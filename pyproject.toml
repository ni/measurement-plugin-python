[tool.black]
extend_exclude = '\.tox/|_pb2(_grpc)?\.(py|pyi)$|ni_measurementlink_generator/|examples/'
line-length = 100

[tool.ni-python-styleguide]
extend_exclude = '.tox/,*_pb2_grpc.py,*_pb2_grpc.pyi,*_pb2.py,*_pb2.pyi,ni_measurementlink_generator/,examples/'

[tool.poetry]
name = "ni_measurementlink_service"
version = "1.3.0-dev0"
description = "MeasurementLink Support for Python"
authors = ["NI <opensource@ni.com>"]
readme = "README.md" # apply the repo readme to the package as well
repository = "https://github.com/ni/measurementlink-python/"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Science/Research",
    "Operating System :: Microsoft :: Windows",
    # Poetry automatically adds classifiers for the license and the supported Python versions.
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware",
]

[tool.poetry.dependencies]
python = "^3.8"
# This package includes gRPC stubs that were generated with the version of grpcio-tools specified
# below. Please keep the minimum grpcio version in sync with the grpcio-tools version. Otherwise,
# the generated gRPC stubs may not work with the minimum grpcio version.
grpcio = "^1.49.1"
protobuf = "^4.21"
pywin32 = {version = ">=303", platform = "win32"}
deprecation = ">=2.1"
# https://github.com/microsoft/tracelogging/issues/58 - traceloggingdynamic raises TypeError with Python 3.8
traceloggingdynamic = {version = ">=1.0", platform = "win32", python = "^3.9"}
python-decouple = ">=3.8"
nidaqmx = {version = ">=0.8.0", extras = ["grpc"], optional = true}
nidcpower = {version = ">=1.4.4", extras = ["grpc"], optional = true}
nidigital = {version = ">=1.4.4", extras = ["grpc"], optional = true}
nidmm = {version = ">=1.4.4", extras = ["grpc"], optional = true}
nifgen = {version = ">=1.4.4", extras = ["grpc"], optional = true}
niscope = {version = ">=1.4.4", extras = ["grpc"], optional = true}
niswitch = {version = ">=1.4.4", extras = ["grpc"], optional = true}

[tool.poetry.extras]
drivers = ["nidaqmx", "nidcpower", "nidigital", "nidmm", "nifgen", "niscope", "niswitch"]
nidaqmx = ["nidaqmx"]
nidcpower = ["nidcpower"]
nidigital = ["nidigital"]
nidmm = ["nidmm"]
nifgen = ["nifgen"]
niscope = ["niscope"]
niswitch = ["niswitch"]

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
ni-python-styleguide = ">=0.4.1"
# When you update the grpcio-tools version, you should update the minimum grpcio version
# and regenerate gRPC stubs.
grpcio-tools = [
  {version = "1.49.1", python = ">=3.8,<3.12"},
  {version = "1.59.0", python = "^3.12"},
]
pytest-cov = ">=3.0.0"
pytest-mock = ">=3.0"
tox = ">=3.24"
mypy = ">=1.0"
mypy-protobuf = ">=3.4"
types-protobuf = "^4.21"
types-pkg-resources = "*"
types-pywin32 = ">=304"
grpc-stubs = "^1.53"
psutil = ">=5.9"
types-psutil = ">=5.9"
# NumPy dropped support for Python 3.8 before adding support for Python 3.12, so
# we need to include multiple NumPy versions in poetry.lock.
numpy = [
  {version = ">=1.22", python = ">=3.8,<3.12"},
  {version = ">=1.26", python = ">=3.12,<3.13"},
]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = ">=5.0.1"
sphinx-rtd-theme = ">=1.0.0"
sphinx-autoapi = ">=1.8.4"
m2r2 = ">=0.3.2"
toml = ">=0.10.2"
tomlkit = ">=0.11.0"
sphinx-click = ">=4.1.0"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--doctest-modules --strict-markers"
filterwarnings = ["always::ImportWarning", "always::ResourceWarning"]
testpaths = ["tests"]
markers = [
  "disable_feature_toggle: specifies a feature toggle to disable for the test function/module.",
  "enable_feature_toggle: specifies a feature toggle to enable for the test function/module.",
  "service_class: specifies which test service to use.",
  "use_code_readiness: specifies a code readiness level to use for the test function/module.",
]

[tool.mypy]
disallow_untyped_defs = true
namespace_packages = true
plugins = "numpy.typing.mypy_plugin"
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  # https://github.com/HBNetwork/python-decouple/issues/122 - Add support for type stubs
  "decouple.*",
  # https://github.com/briancurtin/deprecation/issues/56 - Add type information (PEP 561)
  "deprecation.*",
  "grpc.framework.foundation.*",
  # https://github.com/microsoft/tracelogging/issues/57 - Python traceloggingdynamic package is missing py.typed marker file
  "traceloggingdynamic",
  # https://github.com/ni/nidaqmx-python/issues/209 - Support type annotations
  "nidaqmx",
  # https://github.com/ni/nimi-python/issues/1887 - Support type annotations
  "nidcpower",
  "nidigital",
  "nidmm",
  "nifgen",
  "niscope",
  "niswitch",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
# The tests are not yet ready for --disallow-untyped-defs (or even --disallow-incomplete-defs)
module = ["tests.*"]
check_untyped_defs = true
disallow_untyped_defs = false