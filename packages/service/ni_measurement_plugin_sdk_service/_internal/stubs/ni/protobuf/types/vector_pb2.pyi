"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import ni_measurement_plugin_sdk_service._internal.stubs.ni.protobuf.types.array_pb2 as ni_protobuf_types_array_pb2
import ni_measurement_plugin_sdk_service._internal.stubs.ni.protobuf.types.attribute_value_pb2 as ni_protobuf_types_attribute_value_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Vector(google.protobuf.message.Message):
    """A vector value with associated attributes, such as units."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> ni_protobuf_types_attribute_value_pb2.AttributeValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: ni_protobuf_types_attribute_value_pb2.AttributeValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ATTRIBUTES_FIELD_NUMBER: builtins.int
    DOUBLE_ARRAY_FIELD_NUMBER: builtins.int
    SINT32_ARRAY_FIELD_NUMBER: builtins.int
    BOOL_ARRAY_FIELD_NUMBER: builtins.int
    STRING_ARRAY_FIELD_NUMBER: builtins.int
    @property
    def attributes(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, ni_protobuf_types_attribute_value_pb2.AttributeValue]:
        """The names and values of all vector attributes.

        A vector attribute is metadata attached to a vector.
        It is represented in this message as a map associating the name of
        the attribute with the value described by AttributeValue.
        """

    @property
    def double_array(self) -> ni_protobuf_types_array_pb2.DoubleArray: ...
    @property
    def sint32_array(self) -> ni_protobuf_types_array_pb2.SInt32Array: ...
    @property
    def bool_array(self) -> ni_protobuf_types_array_pb2.BoolArray: ...
    @property
    def string_array(self) -> ni_protobuf_types_array_pb2.StringArray: ...
    def __init__(
        self,
        *,
        attributes: collections.abc.Mapping[builtins.str, ni_protobuf_types_attribute_value_pb2.AttributeValue] | None = ...,
        double_array: ni_protobuf_types_array_pb2.DoubleArray | None = ...,
        sint32_array: ni_protobuf_types_array_pb2.SInt32Array | None = ...,
        bool_array: ni_protobuf_types_array_pb2.BoolArray | None = ...,
        string_array: ni_protobuf_types_array_pb2.StringArray | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["bool_array", b"bool_array", "double_array", b"double_array", "sint32_array", b"sint32_array", "string_array", b"string_array", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "bool_array", b"bool_array", "double_array", b"double_array", "sint32_array", b"sint32_array", "string_array", b"string_array", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["value", b"value"]) -> typing.Literal["double_array", "sint32_array", "bool_array", "string_array"] | None: ...

global___Vector = Vector
