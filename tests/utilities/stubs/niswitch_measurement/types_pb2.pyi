"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Configurations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RELAY_NAMES_FIELD_NUMBER: builtins.int
    MULTI_SESSION_FIELD_NUMBER: builtins.int
    @property
    def relay_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    multi_session: builtins.bool
    def __init__(
        self,
        *,
        relay_names: collections.abc.Iterable[builtins.str] | None = ...,
        multi_session: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["multi_session", b"multi_session", "relay_names", b"relay_names"]) -> None: ...

global___Configurations = Configurations

@typing_extensions.final
class Outputs(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_NAMES_FIELD_NUMBER: builtins.int
    RESOURCE_NAMES_FIELD_NUMBER: builtins.int
    CHANNEL_LISTS_FIELD_NUMBER: builtins.int
    CONNECTED_CHANNELS_FIELD_NUMBER: builtins.int
    @property
    def session_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def resource_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def channel_lists(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def connected_channels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        session_names: collections.abc.Iterable[builtins.str] | None = ...,
        resource_names: collections.abc.Iterable[builtins.str] | None = ...,
        channel_lists: collections.abc.Iterable[builtins.str] | None = ...,
        connected_channels: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_lists", b"channel_lists", "connected_channels", b"connected_channels", "resource_names", b"resource_names", "session_names", b"session_names"]) -> None: ...

global___Outputs = Outputs
